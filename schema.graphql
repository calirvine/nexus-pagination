### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address implements Node {
  addressLine1: String!
  addressLine2: String
  city: String!
  id: ID!
  mailingAddress: String!
  postalCode: String!
}

type ContactInfo implements Node {
  email: String
  id: ID!
  phoneNumber: String
}

interface Node {
  """Resource unique identifier"""
  id: ID!
}

"""
PageInfo cursor, as defined in https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  The cursor corresponding to the last nodes in edges. Null if the connection is empty.
  """
  endCursor: String

  """
  Used to indicate whether more edges exist following the set defined by the clients arguments.
  """
  hasNextPage: Boolean!

  """
  Used to indicate whether more edges exist prior to the set defined by the clients arguments.
  """
  hasPreviousPage: Boolean!

  """
  The cursor corresponding to the first nodes in edges. Null if the connection is empty.
  """
  startCursor: String
}

type Person implements Node {
  address: Address
  contactInfo: ContactInfo
  fullname: String!
  id: ID!
}

type PersonConnection {
  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-Edge-Types
  """
  edges: [PersonEdge!]!

  """Flattened list of Person type"""
  nodes: [Person!]!

  """
  https://facebook.github.io/relay/graphql/connections.htm#sec-undefined.PageInfo
  """
  pageInfo: PageInfo!
}

type PersonEdge {
  """https://facebook.github.io/relay/graphql/connections.htm#sec-Cursor"""
  cursor: String!

  """https://facebook.github.io/relay/graphql/connections.htm#sec-Node"""
  node: Person!
}

type Query {
  node(id: ID!): Node
  nodes(ids: [ID!]!): [Node]!
  ok: Boolean
  people(
    """Returns the elements in the list that come after the specified cursor"""
    after: String

    """Returns the first n elements from the list."""
    first: Int!
  ): PersonConnection!
}
